#ServiceNOW
snow.instance=dev62715
#snow.baseURL=dev85817.service-now.com
snow.baseURL=dev62715.service-now.com
snow.username=admin
snow.password=Scifar123
#snow.incidentURL=api/now/table/incident?sysparm_limit=1

snow.incidentURL=api/now/table/incident
snow.changeRequestURL=api/now/table/change_request
snow.ci.serverURL = api/now/table/cmdb_ci_server
snow.ci.serviceURL = api/now/table/cmdb_ci_service
snow.problemURL=api/now/table/problem
snow.cmdb.rel.ciURL=api/now/table/cmdb_rel_ci



#neo4j
neo4j.url =  bolt://54.241.75.85:7687
neo4j.username = neo4j
neo4j.password = admin

#Cypher Load Queries

import.incidents = WITH {json} as data UNWIND data.result AS r MERGE (i:INCIDENT {number:r.number}) ON CREATE SET i.parent = r.parent,\
i.made_sla = r.made_sla, i.caused_by = r.caused_by, i.watch_list = r.watch_list, i.upon_reject = r.upon_reject, i.sys_updated_on = r.sys_updated_on, \
i.child_incidents = r.child_incidents, i.hold_reason = r.hold_reason, i.approval_history = r.approval_history, i.number = r.number, \
i.sys_updated_by = r.sys_updated_by, i.user_input = r.user_input, i.sys_created_on =  r.sys_created_on, i.state = r.state, \
i.sys_created_by = r.sys_created_by, i.knowledge = r.knowledge, i.order = r.order, i.calendar_stc = r.calendar_stc, i.closed_at = r.closed_at, \
i.delivery_plan = r.delivery_plan, i.impact = r.impact, i.active = r.active, i.work_notes_list = r.work_notes_list, i.priority = r.priority, \
i.sys_domain_path = r.sys_domain_path, i.rfc = r.rfc, i.time_worked = r.time_worked, i.expected_start = r.expected_start, i.opened_at = r.opened_at, \
i.business_duration = r.business_duration, i.group_list = r.group_list,i.work_end = r.work_end, i.reopened_time = r.reopened_time, \
i.resolved_at = r.resolved_at, i.approval_set = r.approval_set, i.subcategory = r.subcategory, i.work_notes_list = r.work_notes_list, \
i.short_description = r.short_description, i.close_code = r.close_code,i.correlation_display = r.correlation_display, i.delivery_task = r.delivery_task, \
i.work_start = r.work_start, i.additional_assignee_list = r.additional_assignee_list, i.business_stc = r.business_stc, i.description = r.description, \
i.calendar_duration = r.calendar_duration, i.close_notes = r.close_notes, i.notify = r.notify, i.sys_class_name = r.sys_class_name, \
i.follow_up = r.follow_up, i.sys_id = r.sys_id, i.contact_type = r.contact_type, \
i.reopened_by = r.reopened_by, i.incident_state = r.incident_state, i.urgency = r.urgency, \
i.reassignment_count = r.reassignment_count, i.activity_due = r.activity_due, i.severity = r.severity, i.comments = r.comments, \
i.approval = r.approval, i.sla_due = r.sla_due, i.comments_and_work_notes = r.comments_and_work_notes, i.due_date = r.due_date, \
i.sys_mod_count = r.sys_mod_count, i.reopen_count = r.reopen_count, i.sys_tags = r.sys_tags, i.escalation = r.escalation, \
i.upon_approval = r.upon_approval, i.correlation_id = r.correlation_id, i.category = r.category, \
i.parent_incident = CASE WHEN r.parent_incident <> "" THEN r.parent_incident.value ELSE [] END ,\
i.problem_id = CASE WHEN r.problem_id <> "" THEN r.problem_id.value ELSE [] END, \
i.location = CASE WHEN r.location <> "" THEN r.location.value ELSE [] END,  \
i.resolved_by = CASE WHEN r.resolved_by <> "" THEN r.resolved_by.value ELSE [] END, \
i.opened_by = CASE WHEN r.opened_by <> "" THEN r.opened_by.value ELSE [] END, \
i.sys_domain = CASE WHEN r.sys_domain <> "" THEN r.sys_domain.value ELSE [] END, \
i.cmdb_ci = CASE WHEN r.cmdb_ci <> "" THEN r.cmdb_ci.value ELSE [] END, \
i.business_service = CASE WHEN r.business_service <> "" THEN r.business_service.value ELSE [] END, \
i.caller_id = CASE WHEN r.caller_id <> "" THEN r.caller_id.value ELSE [] END, \
i.assignment_group = CASE WHEN r.assignment_group <> "" THEN r.assignment_group.value ELSE [] END, \
i.closed_by = CASE WHEN r.closed_by <> "" THEN r.closed_by.value ELSE [] END, \
i.company = CASE WHEN r.company <> "" THEN r.company.value ELSE [] END, \
i.assigned_to = CASE WHEN r.assigned_to <> "" THEN r.assigned_to.value ELSE [] END \
ON MATCH SET \
i.parent = r.parent,i.made_sla = r.made_sla, i.caused_by = r.caused_by, i.watch_list = r.watch_list, i.upon_reject = r.upon_reject, \
i.sys_updated_on = r.sys_updated_on, i.child_incidents = r.child_incidents, i.hold_reason = r.hold_reason, i.approval_history = r.approval_history, \
i.sys_updated_by = r.sys_updated_by, i.user_input = r.user_input, i.sys_created_on =  r.sys_created_on, i.state = r.state, \
i.sys_created_by = r.sys_created_by, i.knowledge = r.knowledge, i.order = r.order, i.calendar_stc = r.calendar_stc, i.closed_at = r.closed_at, \
i.delivery_plan = r.delivery_plan, i.impact = r.impact, i.active = r.active, i.work_notes_list = r.work_notes_list, i.priority = r.priority, \
i.sys_domain_path = r.sys_domain_path, i.rfc = r.rfc, i.time_worked = r.time_worked, i.expected_start = r.expected_start, i.opened_at = r.opened_at, \
i.business_duration = r.business_duration, i.group_list = r.group_list,i.work_end = r.work_end, i.reopened_time = r.reopened_time, \
i.resolved_at = r.resolved_at, i.approval_set = r.approval_set, i.subcategory = r.subcategory, i.work_notes_list = r.work_notes_list, \
i.short_description = r.short_description, i.close_code = r.close_code,i.correlation_display = r.correlation_display, i.delivery_task = r.delivery_task, \
i.work_start = r.work_start, i.additional_assignee_list = r.additional_assignee_list, i.business_stc = r.business_stc, i.description = r.description, \
i.calendar_duration = r.calendar_duration, i.close_notes = r.close_notes, i.notify = r.notify, i.sys_class_name = r.sys_class_name, \
i.follow_up = r.follow_up, i.sys_id = r.sys_id, i.contact_type = r.contact_type, i.reopened_by = r.reopened_by, i.incident_state = r.incident_state, \
i.urgency = r.urgency, i.reassignment_count = r.reassignment_count, i.activity_due = r.activity_due, i.severity = r.severity, \
i.comments = r.comments, i.approval = r.approval, i.sla_due = r.sla_due, i.comments_and_work_notes = r.comments_and_work_notes, \
i.due_date = r.due_date, i.sys_mod_count = r.sys_mod_count, i.reopen_count = r.reopen_count, i.sys_tags = r.sys_tags,i.escalation = r.escalation, \
i.upon_approval = r.upon_approval, i.correlation_id = r.correlation_id, i.category = r.category, \
i.parent_incident = CASE WHEN r.parent_incident <> "" THEN r.parent_incident.value ELSE [] END ,\
i.problem_id = CASE WHEN r.problem_id <> "" THEN r.problem_id.value ELSE [] END, \
i.location = CASE WHEN r.location <> "" THEN r.location.value ELSE [] END, \
i.resolved_by = CASE WHEN r.resolved_by <> "" THEN r.resolved_by.value ELSE [] END, \
i.opened_by = CASE WHEN r.opened_by <> "" THEN r.opened_by.value ELSE [] END, \
i.sys_domain = CASE WHEN r.sys_domain <> "" THEN r.sys_domain.value ELSE [] END, \
i.cmdb_ci = CASE WHEN r.cmdb_ci <> "" THEN r.cmdb_ci.value ELSE [] END, \
i.business_service = CASE WHEN r.business_service <> "" THEN r.business_service.value ELSE [] END, \
i.caller_id = CASE WHEN r.caller_id <> "" THEN r.caller_id.value ELSE [] END, \
i.assignment_group = CASE WHEN r.assignment_group <> "" THEN r.assignment_group.value ELSE [] END, \
i.closed_by = CASE WHEN r.closed_by <> "" THEN r.closed_by.value ELSE [] END, \
i.company = CASE WHEN r.company <> "" THEN r.company.value ELSE [] END, \
i.assigned_to = CASE WHEN r.assigned_to <> "" THEN r.assigned_to.value ELSE [] END \
RETURN i.number as number

import.changeRequests = WITH {json} as data UNWIND data.result AS r MERGE (c:CHANGE_REQUEST {number:r.number}) ON CREATE SET c.reason = r.reason, \
c.made_sla = r.made_sla,c.backout_plan = r.backout_plan, c.watch_list = r.watch_list, c.upon_reject = r.upon_reject, \
c.sys_updated_on = r.sys_updated_on, c.type = r.type, c.conflict_statusRun = r.conflict_statusRun, c.approval_history = r.approval_history, \
c.number = r.number, c.test_plan = r.test_plan,c.cab_delegate = r.cab_delegate, c.sys_updated_by = r.sys_updated_by, c.user_input= r.user_input, \
c.requested_by_date = r.requested_by_date, c.sys_created_on = r.sys_created_on, c.on_hold_task = r.on_hold_task, c.state = r.state, \
c.sys_created_by = r.sys_created_by, c.knowledge = r.knowledge, c.order = r.order, c.phase = r.phase, c.closed_at = r.closed_at, \
c.delivery_plan = r.delivery_plan, c.impact = r.impact, c.active = r.active, c.review_comments = r.review_comments, \
c.work_notes_list = r.work_notes_list, c.business_service = r.business_service, c.priority = r.priority, c.sys_domain_path = r.sys_domain_path, \
c.time_worked = r.time_worked, c.cab_recommendation= r.cab_recommendation, c.expected_start = r.expected_start, \
c.production_system = r.production_system, c.opened_at = r.opened_at, c.review_date = r.review_date, c.business_duration = r.business_duration, \
c.group_list= r.group_list, c.work_end  = r.work_end, c.change_plan = r.change_plan, c.phase_state = r.phase_state, c.approval_set = r.approval_set, \
c.cab_date  = r.cab_date, c.work_notes= r.work_notes, c.implementation_plan = r.implementation_plan, c.end_date  = r.end_date, \
c.short_description = r.short_description, c.close_code= r.close_code, c.correlation_display = r.correlation_display, \
c.delivery_task= r.delivery_task, c.work_start= r.work_start, c.additional_assignee_list = r.additional_assignee_list, \
c.outside_maintenance_schedule = r.outside_maintenance_schedule, c.description = r.description, c.on_hold_reason = r.on_hold_reason, \
c.calendar_duration = r.calendar_duration, c.close_notes = r.close_notes, c.sys_class_name = r.sys_class_name, c.follow_up = r.follow_up, \
c.sys_id= r.sys_id, c.contact_type = r.contact_type, c.cab_required = r.cab_required, c.urgency = r.urgency, c.scope = r.scope, \
c.company = r.company, c.justification= r.justification, c.reassignment_count= r.reassignment_count, c.review_status= r.review_status, \
c.activity_due = r.activity_due, c.start_date= r.start_date, c.comments  = r.comments, c.approval  = r.approval, \
c.sla_due = r.sla_due, c.comments_and_work_notes = r.comments_and_work_notes, c.due_date = r.due_date, c.sys_mod_count = r.sys_mod_count, \
c.on_hold = r.on_hold, c.sys_tags  = r.sys_tags, c.conflict_last_run = r.conflict_last_run, c.escalation = r.escalation, \
c.upon_approval = r.upon_approval, c.correlation_id = r.correlation_id, c.location  = r.location, c.risk  = r.risk, c.category  = r.category, \
c.risk_impact_analysis = r.risk_impact_analysis, \
c.parent = CASE WHEN r.parent <> "" THEN r.parent.value ELSE [] END ,\
c.cmdb_ci = CASE WHEN r.cmdb_ci <> "" THEN r.cmdb_ci.value ELSE [] END ,\
c.assigned_to = CASE WHEN r.assigned_to <> "" THEN r.assigned_to.value ELSE [] END, \
c.opened_by = CASE WHEN r.opened_by <> "" THEN r.opened_by.value ELSE [] END ,\
c.sys_domain = CASE WHEN r.sys_domain <> "" THEN r.sys_domain.value ELSE [] END ,\
c.requested_by = CASE WHEN r.requested_by <> "" THEN r.requested_by.value ELSE [] END ,\
c.assignment_group = CASE WHEN r.assignment_group <> "" THEN r.assignment_group.value ELSE [] END ,\
c.closed_by = CASE WHEN r.closed_by <> "" THEN r.closed_by.value ELSE [] END \
ON MATCH SET \
c.reason = r.reason,c.made_sla = r.made_sla,c.backout_plan = r.backout_plan, c.watch_list = r.watch_list, c.upon_reject = r.upon_reject, \
c.sys_updated_on = r.sys_updated_on, c.type = r.type, c.conflict_statusRun = r.conflict_statusRun, c.approval_history = r.approval_history, \
c.number = r.number, c.test_plan = r.test_plan,c.cab_delegate = r.cab_delegate, c.sys_updated_by = r.sys_updated_by, c.user_input= r.user_input, \
c.requested_by_date = r.requested_by_date, c.sys_created_on = r.sys_created_on, c.on_hold_task = r.on_hold_task, c.state = r.state, \
c.sys_created_by = r.sys_created_by, c.knowledge = r.knowledge, c.order = r.order, c.phase = r.phase, c.closed_at = r.closed_at, \
c.delivery_plan = r.delivery_plan, c.impact = r.impact, c.active = r.active, c.review_comments = r.review_comments, \
c.work_notes_list = r.work_notes_list, c.business_service = r.business_service, c.priority = r.priority, c.sys_domain_path = r.sys_domain_path, \
c.time_worked = r.time_worked, c.cab_recommendation= r.cab_recommendation, c.expected_start = r.expected_start, \
c.production_system = r.production_system, c.opened_at = r.opened_at, c.review_date = r.review_date, c.business_duration = r.business_duration, \
c.group_list= r.group_list, c.work_end  = r.work_end, c.change_plan = r.change_plan, c.phase_state = r.phase_state, c.approval_set = r.approval_set, \
c.cab_date  = r.cab_date, c.work_notes= r.work_notes, c.implementation_plan = r.implementation_plan, c.end_date  = r.end_date, \
c.short_description = r.short_description, c.close_code= r.close_code, c.correlation_display = r.correlation_display, \
c.delivery_task= r.delivery_task, c.work_start= r.work_start, c.additional_assignee_list = r.additional_assignee_list, \
c.outside_maintenance_schedule = r.outside_maintenance_schedule, c.description = r.description, c.on_hold_reason = r.on_hold_reason, \
c.calendar_duration = r.calendar_duration, c.close_notes = r.close_notes, c.sys_class_name = r.sys_class_name, c.follow_up = r.follow_up, \
c.sys_id= r.sys_id, c.contact_type = r.contact_type, c.cab_required = r.cab_required, c.urgency = r.urgency, c.scope = r.scope, \
c.company = r.company, c.justification= r.justification, c.reassignment_count= r.reassignment_count, c.review_status= r.review_status, \
c.activity_due = r.activity_due, c.start_date= r.start_date, c.comments  = r.comments, c.approval  = r.approval, \
c.sla_due = r.sla_due, c.comments_and_work_notes = r.comments_and_work_notes, c.due_date = r.due_date, c.sys_mod_count = r.sys_mod_count, \
c.on_hold = r.on_hold, c.sys_tags  = r.sys_tags, c.conflict_last_run = r.conflict_last_run, c.escalation = r.escalation, \
c.upon_approval = r.upon_approval, c.correlation_id = r.correlation_id, c.location  = r.location, c.risk  = r.risk, c.category  = r.category, \
c.risk_impact_analysis = r.risk_impact_analysis, \
c.parent = CASE WHEN r.parent <> "" THEN r.parent.value ELSE [] END ,\
c.cmdb_ci = CASE WHEN r.cmdb_ci <> "" THEN r.cmdb_ci.value ELSE [] END ,\
c.assigned_to = CASE WHEN r.assigned_to <> "" THEN r.assigned_to.value ELSE [] END, \
c.opened_by = CASE WHEN r.opened_by <> "" THEN r.opened_by.value ELSE [] END ,\
c.sys_domain = CASE WHEN r.sys_domain <> "" THEN r.sys_domain.value ELSE [] END ,\
c.requested_by = CASE WHEN r.requested_by <> "" THEN r.requested_by.value ELSE [] END ,\
c.assignment_group = CASE WHEN r.assignment_group <> "" THEN r.assignment_group.value ELSE [] END ,\
c.closed_by = CASE WHEN r.closed_by <> "" THEN r.closed_by.value ELSE [] END \
RETURN c.number as number

import.ci.servers =  WITH {json} as data UNWIND data.result AS r MERGE (s:SERVER {name:r.name}) ON CREATE SET \
s.firewall_status = r.firewall_status, s.os_address_width = r.os_address_width, s.operational_status = r.operational_status, \
s.os_service_pack = r.os_service_pack, s.cpu_core_thread = r.cpu_core_thread, s.sys_updated_on  = r.sys_updated_on, \
s.discovery_source = r.discovery_source, s.first_discovered = r.first_discovered, s.due_in = r.due_in, s.used_for  = r.used_for, \
s.gl_account = r.gl_account, s.invoice_number = r.invoice_number, s.sys_created_by = r.sys_created_by, s.ram = r.ram, \
s.warranty_expiration = r.warranty_expiration, s.cpu_name = r.cpu_name, s.cpu_speed = r.cpu_speed, s.owned_by = r.owned_by, \
s.checked_out = r.checked_out, s.classification = r.classification, s.disk_space = r.disk_space, s.sys_domain_path = r.sys_domain_path, \
s.object_id = r.object_id, s.dns_domain = r.dns_domain, s.assigned = r.assigned, \
s.purchase_date = r.purchase_date, s.cd_speed = r.cd_speed, s.short_description = r.short_description, s.floppy = r.floppy, \
s.os_domain = r.os_domain, s.can_print = r.can_print, s.last_discovered = r.last_discovered, s.sys_class_name = r.sys_class_name, \
s.cpu_count = r.cpu_count, s.model_number = r.model_number, s.assigned_to = r.assigned_to, s.start_date = r.start_date, \
s.os_version = r.os_version, s.serial_number = r.serial_number, s.cd_rom = r.cd_rom, s.support_group = r.support_group, \
s.correlation_id = r.correlation_id, s.unverified = r.unverified, s.attributes = r.attributes, s.cpu_core_count = r.cpu_core_count, \
s.form_factor = r.form_factor, s.skip_sync = r.skip_sync, s.sys_updated_by = r.sys_updated_by, s.sys_created_on = r.sys_created_on, \
s.cpu_type = r.cpu_type, s.install_date = r.install_date, s.asset_tag = r.asset_tag, s.dr_backup = r.dr_backup, \
s.hardware_substatus =  r.hardware_substatus, s.fqdn = r.fqdn, s.change_control = r.change_control, s.delivery_date = r.delivery_date, \
s.hardware_status = r.hardware_status, s.install_status = r.install_status, s.supported_by = r.supported_by, s.name = r.name, \
s.subcategory = r.subcategory, s.default_gateway = r.default_gateway, s.chassis_type = r.chassis_type, s.virtual = r.virtual, \
s.assignment_group = r.assignment_group, s.sys_id = r.sys_id, s.po_number = r.po_number, s.checked_in = r.checked_in, \
s.sys_class_path = r.sys_class_path, s.mac_address = r.mac_address, s.justification = r.justification, s.department = r.department, \
s.comments = r.comments, s.cost = r.cost, s.os = r.os, s.sys_mod_count = r.sys_mod_count, s.monitor = r.monitor, \
s.ip_address = r.ip_address, s.sys_tags = r.sys_tags, s.cost_cc = r.cost_cc, s.order_date = r.order_date, s.schedule = r.schedule, \
s.due = r.due, s.category = r.category, s.fault_count = r.fault_count, s.host_name = r.host_name, s.lease_id = r.lease_id, \
s.maintenance_schedule = CASE WHEN r.maintenance_schedule <> "" THEN r.maintenance_schedule.value ELSE [] END, \
s.cpu_manufacturer = CASE WHEN r.cpu_manufacturer <> "" THEN r.cpu_manufacturer.value ELSE [] END, \
s.cost_center = CASE WHEN r.cost_center <> "" THEN r.cost_center.value ELSE [] END ,\
s.managed_by = CASE WHEN r.managed_by <> "" THEN r.managed_by.value ELSE [] END ,\
s.manufacturer = CASE WHEN r.manufacturer <> "" THEN r.manufacturer.value ELSE [] END ,\
s.vendor = CASE WHEN r.vendor <> "" THEN r.vendor.value ELSE [] END ,\
s.asset = CASE WHEN r.asset <> "" THEN r.asset.value ELSE [] END, \
s.sys_domain = CASE WHEN r.sys_domain <> "" THEN r.asset.sys_domain ELSE [] END, \
s.company = CASE WHEN r.company <> "" THEN r.asset.company ELSE [] END, \
s.model_id = CASE WHEN r.model_id <> "" THEN r.asset.model_id ELSE [] END, \
s.location = CASE WHEN r.location <> "" THEN r.asset.location ELSE [] END \
ON MATCH SET \
s.firewall_status = r.firewall_status, s.os_address_width = r.os_address_width, s.operational_status = r.operational_status, \
s.os_service_pack = r.os_service_pack, s.cpu_core_thread = r.cpu_core_thread, s.sys_updated_on  = r.sys_updated_on, \
s.discovery_source = r.discovery_source, s.first_discovered = r.first_discovered, s.due_in = r.due_in, s.used_for  = r.used_for, \
s.gl_account = r.gl_account, s.invoice_number = r.invoice_number, s.sys_created_by = r.sys_created_by, s.ram = r.ram, \
s.warranty_expiration = r.warranty_expiration, s.cpu_name = r.cpu_name, s.cpu_speed = r.cpu_speed, s.owned_by = r.owned_by, \
s.checked_out = r.checked_out, s.classification = r.classification, s.disk_space = r.disk_space, s.sys_domain_path = r.sys_domain_path, \
s.object_id = r.object_id,  s.dns_domain = r.dns_domain, s.assigned = r.assigned, \
s.purchase_date = r.purchase_date, s.cd_speed = r.cd_speed, s.short_description = r.short_description, s.floppy = r.floppy, \
s.os_domain = r.os_domain, s.can_print = r.can_print, s.last_discovered = r.last_discovered, s.sys_class_name = r.sys_class_name, \
s.cpu_count = r.cpu_count, s.model_number = r.model_number, s.assigned_to = r.assigned_to, s.start_date = r.start_date, \
s.os_version = r.os_version, s.serial_number = r.serial_number, s.cd_rom = r.cd_rom, s.support_group = r.support_group, \
s.correlation_id = r.correlation_id, s.unverified = r.unverified, s.attributes = r.attributes, s.cpu_core_count = r.cpu_core_count, \
s.form_factor = r.form_factor, s.skip_sync = r.skip_sync, s.sys_updated_by = r.sys_updated_by, s.sys_created_on = r.sys_created_on, \
s.cpu_type = r.cpu_type, s.install_date = r.install_date, s.asset_tag = r.asset_tag, s.dr_backup = r.dr_backup, \
s.hardware_substatus =  r.hardware_substatus, s.fqdn = r.fqdn, s.change_control = r.change_control, s.delivery_date = r.delivery_date, \
s.hardware_status = r.hardware_status, s.install_status = r.install_status, s.supported_by = r.supported_by, s.name = r.name, \
s.subcategory = r.subcategory, s.default_gateway = r.default_gateway, s.chassis_type = r.chassis_type, s.virtual = r.virtual, \
s.assignment_group = r.assignment_group, s.po_number = r.po_number, s.checked_in = r.checked_in, \
s.sys_class_path = r.sys_class_path, s.mac_address = r.mac_address, s.justification = r.justification, s.department = r.department, \
s.comments = r.comments, s.cost = r.cost, s.os = r.os, s.sys_mod_count = r.sys_mod_count, s.monitor = r.monitor, \
s.ip_address = r.ip_address, s.sys_tags = r.sys_tags, s.cost_cc = r.cost_cc, s.order_date = r.order_date, s.schedule = r.schedule, \
s.due = r.due, s.category = r.category, s.fault_count = r.fault_count, s.host_name = r.host_name, s.lease_id = r.lease_id, \
s.maintenance_schedule = CASE WHEN r.maintenance_schedule <> "" THEN r.maintenance_schedule.value ELSE [] END, \
s.cpu_manufacturer = CASE WHEN r.cpu_manufacturer <> "" THEN r.cpu_manufacturer.value ELSE [] END, \
s.cost_center = CASE WHEN r.cost_center <> "" THEN r.cost_center.value ELSE [] END ,\
s.managed_by = CASE WHEN r.managed_by <> "" THEN r.managed_by.value ELSE [] END ,\
s.manufacturer = CASE WHEN r.manufacturer <> "" THEN r.manufacturer.value ELSE [] END ,\
s.vendor = CASE WHEN r.vendor <> "" THEN r.vendor.value ELSE [] END ,\
s.asset = CASE WHEN r.asset <> "" THEN r.asset.value ELSE [] END, \
s.sys_domain = CASE WHEN r.sys_domain <> "" THEN r.asset.sys_domain ELSE [] END, \
s.company = CASE WHEN r.company <> "" THEN r.asset.company ELSE [] END, \
s.model_id = CASE WHEN r.model_id <> "" THEN r.asset.model_id ELSE [] END, \
s.location = CASE WHEN r.location <> "" THEN r.asset.location ELSE [] END \
RETURN s.name as name

import.ci.service =  WITH {json} as data UNWIND data.result AS r MERGE (c:TECHNICAL_SERVICE {name:r.name}) ON CREATE SET \
c.parent = r.parent, c.skip_sync = r.skip_sync, c.operational_status = r.operational_status, c.sys_updated_on = r.sys_updated_on, \
c.discovery_source = r.discovery_source, c.first_discovered = r.first_discovered, c.sys_updated_by = r.sys_updated_by, c.due_in = r.due_in, \
c.sys_created_on = r.sys_created_on, c.used_for = r.used_for, c.install_date = r.install_date, c.gl_account = r.gl_account, \
c.invoice_number = r.invoice_number, c.sys_created_by = r.sys_created_by, c.warranty_expiration = r.warranty_expiration, c.asset_tag = r.asset_tag, \
c.user_group = r.user_group, c.fqdn = r.fqdn, c.checked_out = r.checked_out, c.sys_domain_path = r.sys_domain_path, \
c.version = r.version, c.delivery_date = r.delivery_date, c.install_status = r.install_status, \
c.cost_center = r.cost_center, c.supported_by = r.supported_by, c.dns_domain = r.dns_domain, c.name = r.name, c.assigned = r.assigned, \
c.purchase_date = r.purchase_date, c.subcategory = r.subcategory, c.short_description = r.short_description, \
c.busines_criticality = r.busines_criticality, c.assignment_group = r.assignment_group, c.can_print = r.can_print, \
c.last_discovered = r.last_discovered, c.sys_class_name = r.sys_class_name, c.manufacturer = r.manufacturer, c.sys_id = r.sys_id, \
c.po_number = r.po_number, c.checked_in = r.checked_in, c.sys_class_path = r.sys_class_path, c.mac_address = r.mac_address, \
c.vendor = r.vendor, c.company = r.company, c.justification = r.justification, c.model_number = r.model_number, c.department = r.department, \
c.start_date = r.start_date, c.comments = r.comments, c.cost = r.cost, c.sys_mod_count = r.sys_mod_count, \
c.monitor = r.monitor, c.serial_number = r.serial_number, c.ip_address = r.ip_address, c.sys_tags = r.sys_tags, c.cost_cc = r.cost_cc, \
c.order_date = r.order_date, c.schedule = r.schedule, c.due = r.due, c.correlation_id = r.correlation_id, c.unverified = r.unverified, \
c.attributes = r.attributes, c.category = r.category, c.fault_count = r.fault_count, c.lease_id = r.lease_id, \
c.service_classification = r.service_classification, \
c.sla = CASE WHEN r.sla <> "" THEN r.sla.value ELSE [] END, \
c.maintenance_schedule = CASE WHEN r.maintenance_schedule <> "" THEN r.maintenance_schedule.value ELSE [] END, \
c.assigned_to = CASE WHEN r.assigned_to <> "" THEN r.assigned_to.value ELSE [] END, \
c.location = CASE WHEN r.location <> "" THEN r.location.value ELSE [] END, \
c.sys_domain = CASE WHEN r.sys_domain <> "" THEN r.sys_domain.value ELSE [] END, \
c.change_control = CASE WHEN r.change_control <> "" THEN r.change_control.value ELSE [] END, \
c.owned_by = CASE WHEN r.owned_by <> "" THEN r.owned_by.value ELSE [] END, \
c.managed_by = CASE WHEN r.managed_by <> "" THEN r.managed_by.value ELSE [] END, \
c.model_id = CASE WHEN r.model_id <> "" THEN r.model_id.value ELSE [] END, \
c.support_group = CASE WHEN r.support_group <> "" THEN r.support_group.value ELSE [] END, \
c.asset = CASE WHEN r.asset <> "" THEN r.asset.value ELSE [] END \
ON MATCH SET \
c.parent = r.parent, c.skip_sync = r.skip_sync, c.operational_status = r.operational_status, c.sys_updated_on = r.sys_updated_on, \
c.discovery_source = r.discovery_source, c.first_discovered = r.first_discovered, c.sys_updated_by = r.sys_updated_by, c.due_in = r.due_in, \
c.sys_created_on = r.sys_created_on, c.used_for = r.used_for, c.install_date = r.install_date, c.gl_account = r.gl_account, \
c.invoice_number = r.invoice_number, c.sys_created_by = r.sys_created_by, c.warranty_expiration = r.warranty_expiration, c.asset_tag = r.asset_tag, \
c.user_group = r.user_group, c.fqdn = r.fqdn, c.checked_out = r.checked_out, c.sys_domain_path = r.sys_domain_path, \
c.version = r.version, c.delivery_date = r.delivery_date, c.install_status = r.install_status, \
c.cost_center = r.cost_center, c.supported_by = r.supported_by, c.dns_domain = r.dns_domain, c.assigned = r.assigned, \
c.purchase_date = r.purchase_date, c.subcategory = r.subcategory, c.short_description = r.short_description, \
c.busines_criticality = r.busines_criticality, c.assignment_group = r.assignment_group, c.can_print = r.can_print, \
c.last_discovered = r.last_discovered, c.sys_class_name = r.sys_class_name, c.manufacturer = r.manufacturer, \
c.po_number = r.po_number, c.checked_in = r.checked_in, c.sys_class_path = r.sys_class_path, c.mac_address = r.mac_address, \
c.vendor = r.vendor, c.company = r.company, c.justification = r.justification, c.model_number = r.model_number, c.department = r.department, \
c.start_date = r.start_date, c.comments = r.comments, c.cost = r.cost, c.sys_mod_count = r.sys_mod_count, \
c.monitor = r.monitor, c.serial_number = r.serial_number, c.ip_address = r.ip_address, c.sys_tags = r.sys_tags, c.cost_cc = r.cost_cc, \
c.order_date = r.order_date, c.schedule = r.schedule, c.due = r.due, c.correlation_id = r.correlation_id, c.unverified = r.unverified, \
c.attributes = r.attributes, c.category = r.category, c.fault_count = r.fault_count, c.lease_id = r.lease_id, \
c.service_classification = r.service_classification, \
c.sla = CASE WHEN r.sla <> "" THEN r.sla.value ELSE [] END, \
c.maintenance_schedule = CASE WHEN r.maintenance_schedule <> "" THEN r.maintenance_schedule.value ELSE [] END, \
c.assigned_to = CASE WHEN r.assigned_to <> "" THEN r.assigned_to.value ELSE [] END, \
c.location = CASE WHEN r.location <> "" THEN r.location.value ELSE [] END, \
c.sys_domain = CASE WHEN r.sys_domain <> "" THEN r.sys_domain.value ELSE [] END, \
c.change_control = CASE WHEN r.change_control <> "" THEN r.change_control.value ELSE [] END, \
c.owned_by = CASE WHEN r.owned_by <> "" THEN r.owned_by.value ELSE [] END, \
c.managed_by = CASE WHEN r.managed_by <> "" THEN r.managed_by.value ELSE [] END, \
c.model_id = CASE WHEN r.model_id <> "" THEN r.model_id.value ELSE [] END, \
c.support_group = CASE WHEN r.support_group <> "" THEN r.support_group.value ELSE [] END, \
c.asset = CASE WHEN r.asset <> "" THEN r.asset.value ELSE [] END \
RETURN c.name as name


import.problems = WITH {json} as data UNWIND data.result AS r MERGE (p:PROBLEM {number:r.number}) ON CREATE SET \
p.parent = r.parent, p.made_sla = r.made_sla, p.watch_list = r.watch_list , \
p.fix_communicated_by = r.fix_communicated_by, p.upon_reject = r.upon_reject, p.sys_updated_on = r.sys_updated_on, p.cause_notes = r.cause_notes, \
p.approval_history = r.approval_history, p.number = r.number, p.resolved_by = r.resolved_by, p.sys_updated_by = r.sys_updated_by, \
p.user_input = r.user_input, p.sys_created_on = r.sys_created_on, p.state = r.state, p.sys_created_by = r.sys_created_by, \
p.knowledge = r.knowledge, p.order = r.order, p.major_problem = r.major_problem, p.closed_at = r.closed_at, p.delivery_plan = r.delivery_plan, \
p.impact = r.impact, p.active = r.active, p.work_notes_list = r.work_notes_list, p.business_service = r.business_service, \
p.priority = r.priority, p.sys_domain_path = r.sys_domain_path, p.time_worked = r.time_worked, p.expected_start = r.expected_start, \
p.opened_at = r.opened_at, p.business_duration = r.business_duration, p.group_list = r.group_list, p.work_end = r.work_end, \
p.resolved_at = r.resolved_at, p.approval_set =r.approval_set, p.subcategory = r.subcategory, p.work_notes = r.work_notes, \
p.reopened_at = r.reopened_at, p.short_description = r.short_description, p.correlation_display = r.correlation_display, \
p.delivery_task = r.delivery_task, p.work_start = r.work_start, p.known_error = r.known_error, \
p.additional_assignee_list = r.additional_assignee_list, p.description = r.description, p.calendar_duration = r.calendar_duration, \
p.close_notes = r.close_notes, p.sys_class_name = r.sys_class_name, p.follow_up = r.follow_up, \
p.workaround = r.workaround, p.sys_id = r.sys_id, p.contact_type = r.contact_type, \
p.resolution_code = r.resolution_code, p.urgency = r.urgency,  p.company = r.company, p.reassignment_count = r.reassignment_count, \
p.confirmed_at = r.confirmed_at, p.related_incidents = r.related_incidents, p.activity_due = r.activity_due, \
p.workaround_communicated_by = r.workaround_communicated_by, p.review_outcome = r.review_outcome, p.comments = r.comments, \
p.fix_communicated_at = r.fix_communicated_at, p.approval =r.approval, p.sla_due = r.sla_due, \
p.comments_and_work_notes = r.comments_and_work_notes, p.due_date = r.due_date, p.problem_state = r.problem_state, \
p.sys_mod_count = r.sys_mod_count, p.reopen_count = r.reopen_count, p.sys_tags = r.sys_tags, \
p.escalation = r.escalation, p.correlation_id =r.correlation_id, p.location = r.location, p.workaround_communicated_at = r.workaround_communicated_at, \
p.category =  r.category, p.fix_notes = r.fix_notes, p.workaround_applied = r.workaround_applied, \
p.first_reported_by_task = CASE WHEN r.first_reported_by_task <> "" THEN r.sla.first_reported_by_task ELSE [] END, \
p.rfc = CASE WHEN r.rfc <> "" THEN r.rfc.value ELSE [] END, \
p.assignment_group = CASE WHEN r.assignment_group <> "" THEN r.assignment_group.value ELSE [] END, \
p.closed_by = CASE WHEN r.closed_by <> "" THEN r.closed_by.value ELSE [] END, \
p.reopened_by = CASE WHEN r.reopened_by <> "" THEN r.reopened_by.value ELSE [] END, \
p.duplicate_of = CASE WHEN r.duplicate_of <> "" THEN r.duplicate_of.value ELSE [] END, \
p.sys_domain = CASE WHEN r.sys_domain <> "" THEN r.sys_domain.value ELSE [] END, \
p.opened_by = CASE WHEN r.opened_by <> "" THEN r.opened_by.value ELSE [] END, \
p.cmdb_ci = CASE WHEN r.cmdb_ci <> "" THEN r.cmdb_ci.value ELSE [] END, \
p.assigned_to = CASE WHEN r.assigned_to <> "" THEN r.assigned_to.value ELSE [] END, \
p.confirmed_by = CASE WHEN r.confirmed_by <> "" THEN r.confirmed_by.value ELSE [] END \
ON MATCH SET \
p.parent = r.parent, p.made_sla = r.made_sla, p.watch_list = r.watch_list, \
p.fix_communicated_by = r.fix_communicated_by, p.upon_reject = r.upon_reject, p.sys_updated_on = r.sys_updated_on, p.cause_notes = r.cause_notes, \
p.user_input = r.user_input, p.sys_created_on = r.sys_created_on, p.state = r.state, p.sys_created_by = r.sys_created_by, \
p.knowledge = r.knowledge, p.order = r.order, p.major_problem = r.major_problem, p.closed_at = r.closed_at, p.delivery_plan = r.delivery_plan, \
p.impact = r.impact, p.active = r.active, p.work_notes_list = r.work_notes_list, p.business_service = r.business_service, \
p.priority = r.priority, p.sys_domain_path = r.sys_domain_path, p.time_worked = r.time_worked, p.expected_start = r.expected_start, \
p.opened_at = r.opened_at, p.business_duration = r.business_duration, p.group_list = r.group_list, p.work_end = r.work_end, \
p.resolved_at = r.resolved_at, p.approval_set =r.approval_set, p.subcategory = r.subcategory, p.work_notes = r.work_notes, \
p.reopened_at = r.reopened_at, p.short_description = r.short_description, p.correlation_display = r.correlation_display, \
p.delivery_task = r.delivery_task, p.work_start = r.work_start, p.known_error = r.known_error, \
p.additional_assignee_list = r.additional_assignee_list, p.description = r.description, p.calendar_duration = r.calendar_duration, \
p.close_notes = r.close_notes, p.sys_class_name = r.sys_class_name, p.follow_up = r.follow_up, \
p.workaround = r.workaround, p.sys_id = r.sys_id, p.contact_type = r.contact_type, \
p.resolution_code = r.resolution_code, p.urgency = r.urgency,  p.company = r.company, p.reassignment_count = r.reassignment_count, \
p.confirmed_at = r.confirmed_at, p.related_incidents = r.related_incidents, p.activity_due = r.activity_due, \
p.workaround_communicated_by = r.workaround_communicated_by, p.review_outcome = r.review_outcome, p.comments = r.comments, \
p.fix_communicated_at = r.fix_communicated_at, p.approval =r.approval, p.sla_due = r.sla_due, \
p.comments_and_work_notes = r.comments_and_work_notes, p.due_date = r.due_date, p.problem_state = r.problem_state, \
p.sys_mod_count = r.sys_mod_count, p.reopen_count = r.reopen_count, p.sys_tags = r.sys_tags, \
p.escalation = r.escalation, p.correlation_id =r.correlation_id, p.location = r.location, p.workaround_communicated_at = r.workaround_communicated_at, \
p.category =  r.category, p.fix_notes = r.fix_notes, p.workaround_applied = r.workaround_applied, \
p.first_reported_by_task = CASE WHEN r.first_reported_by_task <> "" THEN r.sla.first_reported_by_task ELSE [] END, \
p.rfc = CASE WHEN r.rfc <> "" THEN r.rfc.value ELSE [] END, \
p.assignment_group = CASE WHEN r.assignment_group <> "" THEN r.assignment_group.value ELSE [] END, \
p.closed_by = CASE WHEN r.closed_by <> "" THEN r.closed_by.value ELSE [] END, \
p.reopened_by = CASE WHEN r.reopened_by <> "" THEN r.reopened_by.value ELSE [] END, \
p.duplicate_of = CASE WHEN r.duplicate_of <> "" THEN r.duplicate_of.value ELSE [] END, \
p.sys_domain = CASE WHEN r.sys_domain <> "" THEN r.sys_domain.value ELSE [] END, \
p.opened_by = CASE WHEN r.opened_by <> "" THEN r.opened_by.value ELSE [] END, \
p.cmdb_ci = CASE WHEN r.cmdb_ci <> "" THEN r.cmdb_ci.value ELSE [] END, \
p.assigned_to = CASE WHEN r.assigned_to <> "" THEN r.assigned_to.value ELSE [] END, \
p.confirmed_by = CASE WHEN r.confirmed_by <> "" THEN r.confirmed_by.value ELSE [] END \
 

link.runs.on = WITH {json} as data UNWIND data.result AS r MATCH (t:TECHNICAL_SERVICE) WHERE  t.sys_id = r.parent.value MATCH (s:SERVER) WHERE \
s.sys_id = r.child.value MERGE (T)-[:RUNS_ON]->(S) RETURN t.name, s.name

link.has.parent.incident = WITH {json} as data UNWIND data.result AS r MATCH (i:INCIDENT {sys_id : r.sys_id}), (pInc:INCIDENT {sys_id : i.parent_incident}) \
MERGE (i)-[:HAS_PARENT_INCIDENT]->(pInc) RETURN i.number,pInc.number

link.creates.problem = WITH {json} as data UNWIND data.result AS r MATCH (i:INCIDENT {sys_id : r.sys_id}), (p:PROBLEM {sys_id : i.problem_id}) \
MERGE (I)-[:CREATES_PROBLEM]->(P) RETURN i.number,p.number

link.impacts.service = WITH {json} as data UNWIND data.result AS r MATCH (i:INCIDENT {sys_id : r.sys_id}), (t:TECHNICAL_SERVICE {sys_id : i.cmdb_ci}) \
MERGE (I)-[:IMPACTS_SERVICE]-(T) RETURN i.number,t.name

link.affects = WITH {json} as data UNWIND data.result AS r MATCH (t:TECHNICAL_SERVICE) WHERE t.sys_id = r.cmdb_ci.value \
MATCH (p:PROBLEM) WHERE p.sys_id = r.sys_id MERGE (P)-[:AFFECTS]->(t) RETURN p.number, t.name

#Validate caused_by property for possible values. 
link.caused.by = MATCH(i:INCIDENT) , (c:CHANGE_REQUEST) WHERE i.caused_by = c.number MERGE (I)-[:CAUSED_BY]->(C) RETURN i.number, c.number
		